def Merge(A, p, q, r):
    n1 = q - p + 1
    n2 = r - q
    
    # Создание временных подмассивов
    L = [0] * (n1 + 1)
    R = [0] * (n2 + 1)
    
    # Копирование данных во временные подмассивы L и R
    for i in range(n1):
        L[i] = A[p + i]
    for j in range(n2):
        R[j] = A[q + j + 1]
    
    # Добавление "бесконечности" в конец временных подмассивов
    L[n1] = float('inf')
    R[n2] = float('inf')
    
    i = 0
    j = 0
    
    # Объединение временных подмассивов обратно в A
    for k in range(p, r + 1):
        if L[i] <= R[j]:
            A[k] = L[i]
            i += 1
        else:
            A[k] = R[j]
            j += 1

# Пример массива
A = [5, 2, 4, 6, 1, 3, 2, 6]
n = len(A)

# Функция сортировки
def Sort(A, p, r):
    if p < r:
        q = (p + r) // 2
        Sort(A, p, q)
        Sort(A, q + 1, r)
        Merge(A, p, q, r)

# Пример вызова сортировки
Sort(A, 0, n - 1)
print(A)  # Вывод отсортированного массива
